{"ast":null,"code":"'use strict';\n\nconst formatters = require('../formatters');\n/**\n * @param {{ useOr?: boolean }} [options={}]\n * @returns {string}\n */\n\n\nmodule.exports = function getFormatterOptionsText() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let output = Object.keys(formatters).map(name => `\"${name}\"`).join(', ');\n\n  if (options.useOr) {\n    output = output.replace(/, ([a-z\"]+)$/u, ' or $1');\n  }\n\n  return output;\n};","map":{"version":3,"names":["formatters","require","module","exports","getFormatterOptionsText","options","output","Object","keys","map","name","join","useOr","replace"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/stylelint/lib/utils/getFormatterOptionsText.js"],"sourcesContent":["'use strict';\n\nconst formatters = require('../formatters');\n\n/**\n * @param {{ useOr?: boolean }} [options={}]\n * @returns {string}\n */\nmodule.exports = function getFormatterOptionsText(options = {}) {\n\tlet output = Object.keys(formatters)\n\t\t.map((name) => `\"${name}\"`)\n\t\t.join(', ');\n\n\tif (options.useOr) {\n\t\toutput = output.replace(/, ([a-z\"]+)$/u, ' or $1');\n\t}\n\n\treturn output;\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,uBAAT,GAA+C;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EAC/D,IAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYR,UAAZ,EACXS,GADW,CACNC,IAAD,IAAW,IAAGA,IAAK,GADZ,EAEXC,IAFW,CAEN,IAFM,CAAb;;EAIA,IAAIN,OAAO,CAACO,KAAZ,EAAmB;IAClBN,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAe,eAAf,EAAgC,QAAhC,CAAT;EACA;;EAED,OAAOP,MAAP;AACA,CAVD"},"metadata":{},"sourceType":"script"}