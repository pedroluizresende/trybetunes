{"ast":null,"code":"import _regeneratorRuntime from\"/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import Header from'../components/Header';import getMusics from'../services/musicsAPI';import Loading from'./Loading';import MusicCard from'../components/MusicCard';import{addSong,getFavoriteSongs,removeSong}from'../services/favoriteSongsAPI';import styles from'./Album.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Album=/*#__PURE__*/function(_Component){_inherits(Album,_Component);var _super=_createSuper(Album);function Album(){var _this;_classCallCheck(this,Album);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={musics:[],albumInfo:{},requestIsDone:true,favoriteSongs:[],isLoading:false};_this.getFavoriteSongs=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var favoriteSongs;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.setState({requestIsDone:false});_context.next=3;return getFavoriteSongs();case 3:favoriteSongs=_context.sent;_this.setState({favoriteSongs:favoriteSongs,requestIsDone:true});case 5:case\"end\":return _context.stop();}}},_callee);}));_this.fetchMusics=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var id,allInfos,albumMusics;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this.setState({requestIsDone:false,isLoading:true});id=_this.props.match.params.id;_context2.next=4;return getMusics(id);case 4:allInfos=_context2.sent;albumMusics=allInfos.filter(function(info){return info.trackName;});_this.setState({albumInfo:allInfos[0],musics:albumMusics,isLoading:false});case 7:case\"end\":return _context2.stop();}}},_callee2);}));_this.clickChange=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(trackId,isFavorite){var musics,song,favoriteSongs,_favoriteSongs;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:musics=_this.state.musics;song=musics.find(function(music){return music.trackId===trackId;});console.log(song);_this.setState({requestIsDone:false});if(isFavorite){_context3.next=13;break;}_context3.next=7;return addSong(song);case 7:_context3.next=9;return getFavoriteSongs();case 9:favoriteSongs=_context3.sent;_this.setState({requestIsDone:true,favoriteSongs:favoriteSongs});_context3.next=19;break;case 13:_context3.next=15;return removeSong(song);case 15:_context3.next=17;return getFavoriteSongs();case 17:_favoriteSongs=_context3.sent;_this.setState({requestIsDone:true,favoriteSongs:_favoriteSongs});case 19:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}();return _this;}_createClass(Album,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchMusics();this.getFavoriteSongs();}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,albumInfo=_this$state.albumInfo,musics=_this$state.musics,requestIsDone=_this$state.requestIsDone,favoriteSongs=_this$state.favoriteSongs,isLoading=_this$state.isLoading;return/*#__PURE__*/_jsxs(\"main\",{\"data-testid\":\"page-album\",className:styles.container,children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"main\",{className:styles.album,children:[/*#__PURE__*/_jsx(\"header\",{children:!isLoading&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:albumInfo.artworkUrl100,alt:\"capa\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:albumInfo.collectionName}),/*#__PURE__*/_jsx(\"h2\",{children:albumInfo.artistName})]})]})}),/*#__PURE__*/_jsxs(\"section\",{className:styles.musics,children:[!requestIsDone&&/*#__PURE__*/_jsx(Loading,{header:false,textColor:\"rgba(192, 195, 201, 1)\"}),requestIsDone&&/*#__PURE__*/_jsx(\"ul\",{children:musics.map(function(music){return/*#__PURE__*/_jsx(MusicCard,{music:music,clickChange:_this2.clickChange,favoriteSongs:favoriteSongs,favorite:favoriteSongs.some(function(song){return song.trackId===music.trackId;})},music.trackId);})})]})]})]});}}]);return Album;}(Component);export default Album;","map":{"version":3,"names":["React","Component","Header","getMusics","Loading","MusicCard","addSong","getFavoriteSongs","removeSong","styles","Album","state","musics","albumInfo","requestIsDone","favoriteSongs","isLoading","setState","fetchMusics","id","props","match","params","allInfos","albumMusics","filter","info","trackName","clickChange","trackId","isFavorite","song","find","music","console","log","container","album","artworkUrl100","collectionName","artistName","map","some"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/src/pages/Album.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport styles from './Album.module.css';\n\nclass Album extends Component {\n  state = {\n    musics: [],\n    albumInfo: {},\n    requestIsDone: true,\n    favoriteSongs: [],\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    this.fetchMusics();\n    this.getFavoriteSongs();\n  }\n\n  getFavoriteSongs = async () => {\n    this.setState({\n      requestIsDone: false,\n    });\n    const favoriteSongs = await getFavoriteSongs();\n    this.setState({\n      favoriteSongs,\n      requestIsDone: true,\n    });\n  };\n\n  fetchMusics = async () => {\n    this.setState({\n      requestIsDone: false,\n      isLoading: true,\n    });\n    const {\n      match: {\n        params: { id },\n      } } = this.props;\n\n    const allInfos = await getMusics(id);\n    const albumMusics = allInfos.filter((info) => info.trackName);\n    this.setState({\n      albumInfo: allInfos[0],\n      musics: albumMusics,\n      isLoading: false,\n    });\n  };\n\n  clickChange = async (trackId, isFavorite) => {\n    const { musics } = this.state;\n    const song = musics.find((music) => music.trackId === trackId);\n    console.log(song);\n    this.setState({\n      requestIsDone: false,\n    });\n    if (!isFavorite) {\n      await addSong(song);\n      const favoriteSongs = await getFavoriteSongs();\n      this.setState({\n        requestIsDone: true,\n        favoriteSongs,\n      });\n    } else {\n      await removeSong(song);\n      const favoriteSongs = await getFavoriteSongs();\n      this.setState({\n        requestIsDone: true,\n        favoriteSongs,\n      });\n    }\n  };\n\n  render() {\n    const { albumInfo, musics, requestIsDone, favoriteSongs, isLoading } = this.state;\n\n    return (\n\n      <main data-testid=\"page-album\" className={ styles.container }>\n\n        <Header />\n        <main className={ styles.album }>\n          <header>\n            {\n              !isLoading\n               && (\n                 <>\n                   <img src={ albumInfo.artworkUrl100 } alt=\"capa\" />\n                   <div>\n                     <h1>\n                       { albumInfo.collectionName }\n                     </h1>\n                     <h2>{albumInfo.artistName}</h2>\n                   </div>\n                 </>\n               )\n            }\n          </header>\n          <section className={ styles.musics }>\n\n            { !requestIsDone && <Loading\n              header={ false }\n              textColor=\"rgba(192, 195, 201, 1)\"\n            /> }\n            { requestIsDone\n            && (\n              <ul>\n                {\n                  musics.map((music) => (\n                    <MusicCard\n                      key={ music.trackId }\n                      music={ music }\n                      clickChange={ this.clickChange }\n                      favoriteSongs={ favoriteSongs }\n                      favorite={ favoriteSongs\n                        .some((song) => song.trackId === music.trackId) }\n                    />\n                  ))\n                }\n              </ul>\n            )}\n          </section>\n        </main>\n      </main>\n\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}