{"ast":null,"code":"/*!\n * global-prefix <https://github.com/jonschlinkert/global-prefix>\n *\n * Copyright (c) 2015-present Jon Schlinkert.\n * Licensed under the MIT license.\n */\n'use strict';\n\nconst fs = require('fs');\n\nconst os = require('os');\n\nconst path = require('path');\n\nconst ini = require('ini');\n\nlet prefix;\n\nconst getPrefix = () => {\n  if (process.env.PREFIX) return process.env.PREFIX;\n  if (prefix) return prefix; // Start by checking if the global prefix is set by the user\n\n  let home = os.homedir(); // os.homedir() returns undefined if $HOME is not set; path.resolve requires strings\n\n  if (home) {\n    prefix = tryConfigPath(path.resolve(home, '.npmrc'));\n  }\n\n  if (prefix) {\n    return prefix;\n  } // Otherwise find the path of npm\n\n\n  let npm = tryNpmPath();\n\n  if (npm) {\n    // Check the built-in npm config file\n    prefix = tryConfigPath(path.resolve(npm, '..', '..', 'npmrc'));\n\n    if (prefix) {\n      // Now the global npm config can also be checked.\n      prefix = tryConfigPath(path.resolve(prefix, 'etc', 'npmrc')) || prefix;\n    }\n  }\n\n  if (!prefix) {\n    let {\n      APPDATA,\n      DESTDIR,\n      OSTYPE\n    } = process.env; // c:\\node\\node.exe --> prefix=c:\\node\\\n\n    if (process.platform === 'win32' || OSTYPE === 'msys' || OSTYPE === 'cygwin') {\n      prefix = APPDATA ? path.join(APPDATA, 'npm') : path.dirname(process.execPath);\n      return prefix;\n    } // /usr/local/bin/node --> prefix=/usr/local\n\n\n    prefix = path.dirname(path.dirname(process.execPath)); // destdir only is respected on Unix\n\n    if (DESTDIR) {\n      prefix = path.join(DESTDIR, prefix);\n    }\n  }\n\n  return prefix;\n};\n\nfunction tryNpmPath() {\n  try {\n    return fs.realpathSync(require('which').sync('npm'));\n  } catch (err) {\n    /* do nothing */\n  }\n}\n\nfunction tryConfigPath(configPath) {\n  try {\n    return ini.parse(fs.readFileSync(configPath, 'utf-8')).prefix;\n  } catch (err) {\n    /* do nothing */\n  }\n}\n/**\n * Expose `prefix`\n */\n\n\nReflect.defineProperty(module, 'exports', {\n  get() {\n    return getPrefix();\n  }\n\n});","map":{"version":3,"names":["fs","require","os","path","ini","prefix","getPrefix","process","env","PREFIX","home","homedir","tryConfigPath","resolve","npm","tryNpmPath","APPDATA","DESTDIR","OSTYPE","platform","join","dirname","execPath","realpathSync","sync","err","configPath","parse","readFileSync","Reflect","defineProperty","module","get"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/global-prefix/index.js"],"sourcesContent":["/*!\n * global-prefix <https://github.com/jonschlinkert/global-prefix>\n *\n * Copyright (c) 2015-present Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nconst fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst ini = require('ini');\nlet prefix;\n\nconst getPrefix = () => {\n  if (process.env.PREFIX) return process.env.PREFIX;\n  if (prefix) return prefix;\n\n  // Start by checking if the global prefix is set by the user\n  let home = os.homedir();\n\n  // os.homedir() returns undefined if $HOME is not set; path.resolve requires strings\n  if (home) {\n    prefix = tryConfigPath(path.resolve(home, '.npmrc'));\n  }\n\n  if (prefix) {\n    return prefix;\n  }\n\n  // Otherwise find the path of npm\n  let npm = tryNpmPath();\n  if (npm) {\n    // Check the built-in npm config file\n    prefix = tryConfigPath(path.resolve(npm, '..', '..', 'npmrc'));\n\n    if (prefix) {\n      // Now the global npm config can also be checked.\n      prefix = tryConfigPath(path.resolve(prefix, 'etc', 'npmrc')) || prefix;\n    }\n  }\n\n  if (!prefix) {\n    let { APPDATA, DESTDIR, OSTYPE } = process.env;\n\n    // c:\\node\\node.exe --> prefix=c:\\node\\\n    if (process.platform === 'win32' || OSTYPE === 'msys' || OSTYPE === 'cygwin') {\n      prefix = APPDATA ? path.join(APPDATA, 'npm') : path.dirname(process.execPath);\n      return prefix;\n    }\n\n    // /usr/local/bin/node --> prefix=/usr/local\n    prefix = path.dirname(path.dirname(process.execPath));\n\n    // destdir only is respected on Unix\n    if (DESTDIR) {\n      prefix = path.join(DESTDIR, prefix);\n    }\n  }\n\n  return prefix;\n}\n\nfunction tryNpmPath() {\n  try {\n    return fs.realpathSync(require('which').sync('npm'));\n  } catch (err) { /* do nothing */ }\n}\n\nfunction tryConfigPath(configPath) {\n  try {\n    return ini.parse(fs.readFileSync(configPath, 'utf-8')).prefix;\n  } catch (err) { /* do nothing */ }\n}\n\n/**\n * Expose `prefix`\n */\n\nReflect.defineProperty(module, 'exports', {\n  get() {\n    return getPrefix();\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAII,MAAJ;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACtB,IAAIC,OAAO,CAACC,GAAR,CAAYC,MAAhB,EAAwB,OAAOF,OAAO,CAACC,GAAR,CAAYC,MAAnB;EACxB,IAAIJ,MAAJ,EAAY,OAAOA,MAAP,CAFU,CAItB;;EACA,IAAIK,IAAI,GAAGR,EAAE,CAACS,OAAH,EAAX,CALsB,CAOtB;;EACA,IAAID,IAAJ,EAAU;IACRL,MAAM,GAAGO,aAAa,CAACT,IAAI,CAACU,OAAL,CAAaH,IAAb,EAAmB,QAAnB,CAAD,CAAtB;EACD;;EAED,IAAIL,MAAJ,EAAY;IACV,OAAOA,MAAP;EACD,CAdqB,CAgBtB;;;EACA,IAAIS,GAAG,GAAGC,UAAU,EAApB;;EACA,IAAID,GAAJ,EAAS;IACP;IACAT,MAAM,GAAGO,aAAa,CAACT,IAAI,CAACU,OAAL,CAAaC,GAAb,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,OAA9B,CAAD,CAAtB;;IAEA,IAAIT,MAAJ,EAAY;MACV;MACAA,MAAM,GAAGO,aAAa,CAACT,IAAI,CAACU,OAAL,CAAaR,MAAb,EAAqB,KAArB,EAA4B,OAA5B,CAAD,CAAb,IAAuDA,MAAhE;IACD;EACF;;EAED,IAAI,CAACA,MAAL,EAAa;IACX,IAAI;MAAEW,OAAF;MAAWC,OAAX;MAAoBC;IAApB,IAA+BX,OAAO,CAACC,GAA3C,CADW,CAGX;;IACA,IAAID,OAAO,CAACY,QAAR,KAAqB,OAArB,IAAgCD,MAAM,KAAK,MAA3C,IAAqDA,MAAM,KAAK,QAApE,EAA8E;MAC5Eb,MAAM,GAAGW,OAAO,GAAGb,IAAI,CAACiB,IAAL,CAAUJ,OAAV,EAAmB,KAAnB,CAAH,GAA+Bb,IAAI,CAACkB,OAAL,CAAad,OAAO,CAACe,QAArB,CAA/C;MACA,OAAOjB,MAAP;IACD,CAPU,CASX;;;IACAA,MAAM,GAAGF,IAAI,CAACkB,OAAL,CAAalB,IAAI,CAACkB,OAAL,CAAad,OAAO,CAACe,QAArB,CAAb,CAAT,CAVW,CAYX;;IACA,IAAIL,OAAJ,EAAa;MACXZ,MAAM,GAAGF,IAAI,CAACiB,IAAL,CAAUH,OAAV,EAAmBZ,MAAnB,CAAT;IACD;EACF;;EAED,OAAOA,MAAP;AACD,CA/CD;;AAiDA,SAASU,UAAT,GAAsB;EACpB,IAAI;IACF,OAAOf,EAAE,CAACuB,YAAH,CAAgBtB,OAAO,CAAC,OAAD,CAAP,CAAiBuB,IAAjB,CAAsB,KAAtB,CAAhB,CAAP;EACD,CAFD,CAEE,OAAOC,GAAP,EAAY;IAAE;EAAkB;AACnC;;AAED,SAASb,aAAT,CAAuBc,UAAvB,EAAmC;EACjC,IAAI;IACF,OAAOtB,GAAG,CAACuB,KAAJ,CAAU3B,EAAE,CAAC4B,YAAH,CAAgBF,UAAhB,EAA4B,OAA5B,CAAV,EAAgDrB,MAAvD;EACD,CAFD,CAEE,OAAOoB,GAAP,EAAY;IAAE;EAAkB;AACnC;AAED;AACA;AACA;;;AAEAI,OAAO,CAACC,cAAR,CAAuBC,MAAvB,EAA+B,SAA/B,EAA0C;EACxCC,GAAG,GAAG;IACJ,OAAO1B,SAAS,EAAhB;EACD;;AAHuC,CAA1C"},"metadata":{},"sourceType":"script"}