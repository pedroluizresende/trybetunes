{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.merge = merge;\nexports.verify = verify;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction isVirtualType(type) {\n  return type in virtualTypes;\n}\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    if (!isVirtualType(nodeType)) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(nodeType, fns[type]);\n    }\n\n    delete visitor[nodeType];\n    const types = virtualTypes[nodeType];\n\n    if (types !== null) {\n      for (const type of types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors) {\n  let states = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let wrapper = arguments.length > 2 ? arguments[2] : undefined;\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(nodeType, fn) {\n  const newFn = function (path) {\n    if (path[`is${nodeType}`]()) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","explode","merge","verify","virtualTypes","require","_t","DEPRECATED_KEYS","FLIPPED_ALIAS_KEYS","TYPES","isVirtualType","type","visitor","_exploded","nodeType","keys","shouldIgnoreKey","parts","split","length","fns","part","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","types","mergePair","aliases","deprecatedKey","console","trace","alias","existing","assign","_verified","Error","validateVisitorMethods","indexOf","visitors","visitorKey","path","val","concat","fn","TypeError","states","wrapper","rootVisitor","i","state","visitorType","wrapWithStateOrWrapper","nodeVisitor","oldVisitor","newVisitor","key","Array","isArray","map","newFn","call","toString","obj","enter","exit","apply","arguments","dest","src"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/traverse/lib/visitors.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.merge = merge;\nexports.verify = verify;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction isVirtualType(type) {\n  return type in virtualTypes;\n}\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    if (!isVirtualType(nodeType)) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(nodeType, fns[type]);\n    }\n\n    delete visitor[nodeType];\n    const types = virtualTypes[nodeType];\n\n    if (types !== null) {\n      for (const type of types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(nodeType, fn) {\n  const newFn = function (path) {\n    if (path[`is${nodeType}`]()) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}