{"ast":null,"code":"'use strict'; // Try to get file ignorer from '.stylelintignore'\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst {\n  default: ignore\n} = require('ignore');\n\nconst isPathNotFoundError = require('./isPathNotFoundError');\n\nconst DEFAULT_IGNORE_FILENAME = '.stylelintignore';\n/**\n * @param {{ cwd: string, ignorePath?: string, ignorePattern?: string[] }} options\n * @return {import('ignore').Ignore}\n */\n\nmodule.exports = function getFileIgnorer(options) {\n  const ignoreFilePath = options.ignorePath || DEFAULT_IGNORE_FILENAME;\n  const absoluteIgnoreFilePath = path.isAbsolute(ignoreFilePath) ? ignoreFilePath : path.resolve(options.cwd, ignoreFilePath);\n  let ignoreText = '';\n\n  try {\n    ignoreText = fs.readFileSync(absoluteIgnoreFilePath, 'utf8');\n  } catch (readError) {\n    if (!isPathNotFoundError(readError)) {\n      throw readError;\n    }\n  }\n\n  return ignore().add(ignoreText).add(options.ignorePattern || []);\n};","map":{"version":3,"names":["fs","require","path","default","ignore","isPathNotFoundError","DEFAULT_IGNORE_FILENAME","module","exports","getFileIgnorer","options","ignoreFilePath","ignorePath","absoluteIgnoreFilePath","isAbsolute","resolve","cwd","ignoreText","readFileSync","readError","add","ignorePattern"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/stylelint/lib/utils/getFileIgnorer.js"],"sourcesContent":["'use strict';\n// Try to get file ignorer from '.stylelintignore'\n\nconst fs = require('fs');\nconst path = require('path');\nconst { default: ignore } = require('ignore');\n\nconst isPathNotFoundError = require('./isPathNotFoundError');\n\nconst DEFAULT_IGNORE_FILENAME = '.stylelintignore';\n\n/**\n * @param {{ cwd: string, ignorePath?: string, ignorePattern?: string[] }} options\n * @return {import('ignore').Ignore}\n */\nmodule.exports = function getFileIgnorer(options) {\n\tconst ignoreFilePath = options.ignorePath || DEFAULT_IGNORE_FILENAME;\n\tconst absoluteIgnoreFilePath = path.isAbsolute(ignoreFilePath)\n\t\t? ignoreFilePath\n\t\t: path.resolve(options.cwd, ignoreFilePath);\n\tlet ignoreText = '';\n\n\ttry {\n\t\tignoreText = fs.readFileSync(absoluteIgnoreFilePath, 'utf8');\n\t} catch (readError) {\n\t\tif (!isPathNotFoundError(readError)) {\n\t\t\tthrow readError;\n\t\t}\n\t}\n\n\treturn ignore()\n\t\t.add(ignoreText)\n\t\t.add(options.ignorePattern || []);\n};\n"],"mappings":"AAAA,a,CACA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;EAAEE,OAAO,EAAEC;AAAX,IAAsBH,OAAO,CAAC,QAAD,CAAnC;;AAEA,MAAMI,mBAAmB,GAAGJ,OAAO,CAAC,uBAAD,CAAnC;;AAEA,MAAMK,uBAAuB,GAAG,kBAAhC;AAEA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;EACjD,MAAMC,cAAc,GAAGD,OAAO,CAACE,UAAR,IAAsBN,uBAA7C;EACA,MAAMO,sBAAsB,GAAGX,IAAI,CAACY,UAAL,CAAgBH,cAAhB,IAC5BA,cAD4B,GAE5BT,IAAI,CAACa,OAAL,CAAaL,OAAO,CAACM,GAArB,EAA0BL,cAA1B,CAFH;EAGA,IAAIM,UAAU,GAAG,EAAjB;;EAEA,IAAI;IACHA,UAAU,GAAGjB,EAAE,CAACkB,YAAH,CAAgBL,sBAAhB,EAAwC,MAAxC,CAAb;EACA,CAFD,CAEE,OAAOM,SAAP,EAAkB;IACnB,IAAI,CAACd,mBAAmB,CAACc,SAAD,CAAxB,EAAqC;MACpC,MAAMA,SAAN;IACA;EACD;;EAED,OAAOf,MAAM,GACXgB,GADK,CACDH,UADC,EAELG,GAFK,CAEDV,OAAO,CAACW,aAAR,IAAyB,EAFxB,CAAP;AAGA,CAlBD"},"metadata":{},"sourceType":"script"}