{"ast":null,"code":"/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel;\n\nconst queueMicrotask = require('queue-microtask');\n\nfunction runParallel(tasks, cb) {\n  let results, pending, keys;\n  let isSync = true;\n\n  if (Array.isArray(tasks)) {\n    results = [];\n    pending = tasks.length;\n  } else {\n    keys = Object.keys(tasks);\n    results = {};\n    pending = keys.length;\n  }\n\n  function done(err) {\n    function end() {\n      if (cb) cb(err, results);\n      cb = null;\n    }\n\n    if (isSync) queueMicrotask(end);else end();\n  }\n\n  function each(i, err, result) {\n    results[i] = result;\n\n    if (--pending === 0 || err) {\n      done(err);\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null);\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) {\n        each(key, err, result);\n      });\n    });\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) {\n        each(i, err, result);\n      });\n    });\n  }\n\n  isSync = false;\n}","map":{"version":3,"names":["module","exports","runParallel","queueMicrotask","require","tasks","cb","results","pending","keys","isSync","Array","isArray","length","Object","done","err","end","each","i","result","forEach","key","task"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/run-parallel/index.js"],"sourcesContent":["/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallel (tasks, cb) {\n  let results, pending, keys\n  let isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (--pending === 0 || err) {\n      done(err)\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result) })\n    })\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n    })\n  }\n\n  isSync = false\n}\n"],"mappings":"AAAA;AACAA,MAAM,CAACC,OAAP,GAAiBC,WAAjB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA9B;;AAEA,SAASF,WAAT,CAAsBG,KAAtB,EAA6BC,EAA7B,EAAiC;EAC/B,IAAIC,OAAJ,EAAaC,OAAb,EAAsBC,IAAtB;EACA,IAAIC,MAAM,GAAG,IAAb;;EAEA,IAAIC,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAJ,EAA0B;IACxBE,OAAO,GAAG,EAAV;IACAC,OAAO,GAAGH,KAAK,CAACQ,MAAhB;EACD,CAHD,MAGO;IACLJ,IAAI,GAAGK,MAAM,CAACL,IAAP,CAAYJ,KAAZ,CAAP;IACAE,OAAO,GAAG,EAAV;IACAC,OAAO,GAAGC,IAAI,CAACI,MAAf;EACD;;EAED,SAASE,IAAT,CAAeC,GAAf,EAAoB;IAClB,SAASC,GAAT,GAAgB;MACd,IAAIX,EAAJ,EAAQA,EAAE,CAACU,GAAD,EAAMT,OAAN,CAAF;MACRD,EAAE,GAAG,IAAL;IACD;;IACD,IAAII,MAAJ,EAAYP,cAAc,CAACc,GAAD,CAAd,CAAZ,KACKA,GAAG;EACT;;EAED,SAASC,IAAT,CAAeC,CAAf,EAAkBH,GAAlB,EAAuBI,MAAvB,EAA+B;IAC7Bb,OAAO,CAACY,CAAD,CAAP,GAAaC,MAAb;;IACA,IAAI,EAAEZ,OAAF,KAAc,CAAd,IAAmBQ,GAAvB,EAA4B;MAC1BD,IAAI,CAACC,GAAD,CAAJ;IACD;EACF;;EAED,IAAI,CAACR,OAAL,EAAc;IACZ;IACAO,IAAI,CAAC,IAAD,CAAJ;EACD,CAHD,MAGO,IAAIN,IAAJ,EAAU;IACf;IACAA,IAAI,CAACY,OAAL,CAAa,UAAUC,GAAV,EAAe;MAC1BjB,KAAK,CAACiB,GAAD,CAAL,CAAW,UAAUN,GAAV,EAAeI,MAAf,EAAuB;QAAEF,IAAI,CAACI,GAAD,EAAMN,GAAN,EAAWI,MAAX,CAAJ;MAAwB,CAA5D;IACD,CAFD;EAGD,CALM,MAKA;IACL;IACAf,KAAK,CAACgB,OAAN,CAAc,UAAUE,IAAV,EAAgBJ,CAAhB,EAAmB;MAC/BI,IAAI,CAAC,UAAUP,GAAV,EAAeI,MAAf,EAAuB;QAAEF,IAAI,CAACC,CAAD,EAAIH,GAAJ,EAASI,MAAT,CAAJ;MAAsB,CAAhD,CAAJ;IACD,CAFD;EAGD;;EAEDV,MAAM,GAAG,KAAT;AACD"},"metadata":{},"sourceType":"script"}