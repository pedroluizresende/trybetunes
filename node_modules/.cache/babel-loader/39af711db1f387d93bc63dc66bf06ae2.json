{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"namespace\";\n\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [variableDeclarator(id, statement.expression)]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(statement.expression, identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_assert","require","_t","callExpression","cloneNode","expressionStatement","identifier","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","memberExpression","stringLiteral","variableDeclaration","variableDeclarator","ImportBuilder","constructor","importedSource","scope","hub","_statements","_resultName","_importedSource","_scope","_hub","done","statements","resultName","import","push","namespace","name","local","generateUidIdentifier","statement","length","type","specifiers","id","named","importName","var","expression","defaultInterop","_interop","addHelper","wildcardInterop","callee","declarations","init","fail","prop","read"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/helper-module-imports/lib/import-builder.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [variableDeclarator(id, statement.expression)]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(statement.expression, identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,IAAIC,EAAE,GAAGD,OAAO,CAAC,cAAD,CAAhB;;AAEA,MAAM;EACJE,cADI;EAEJC,SAFI;EAGJC,mBAHI;EAIJC,UAJI;EAKJC,iBALI;EAMJC,sBANI;EAOJC,wBAPI;EAQJC,eARI;EASJC,gBATI;EAUJC,aAVI;EAWJC,mBAXI;EAYJC;AAZI,IAaFZ,EAbJ;;AAeA,MAAMa,aAAN,CAAoB;EAClBC,WAAW,CAACC,cAAD,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;IACtC,KAAKC,WAAL,GAAmB,EAAnB;IACA,KAAKC,WAAL,GAAmB,IAAnB;IACA,KAAKC,eAAL,GAAuB,KAAK,CAA5B;IACA,KAAKC,MAAL,GAAcL,KAAd;IACA,KAAKM,IAAL,GAAYL,GAAZ;IACA,KAAKG,eAAL,GAAuBL,cAAvB;EACD;;EAEDQ,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAKN,WADZ;MAELO,UAAU,EAAE,KAAKN;IAFZ,CAAP;EAID;;EAEDO,MAAM,GAAG;IACP,KAAKR,WAAL,CAAiBS,IAAjB,CAAsBtB,iBAAiB,CAAC,EAAD,EAAKK,aAAa,CAAC,KAAKU,eAAN,CAAlB,CAAvC;;IAEA,OAAO,IAAP;EACD;;EAEDrB,OAAO,GAAG;IACR,KAAKmB,WAAL,CAAiBS,IAAjB,CAAsBxB,mBAAmB,CAACF,cAAc,CAACG,UAAU,CAAC,SAAD,CAAX,EAAwB,CAACM,aAAa,CAAC,KAAKU,eAAN,CAAd,CAAxB,CAAf,CAAzC;;IAEA,OAAO,IAAP;EACD;;EAEDQ,SAAS,GAAqB;IAAA,IAApBC,IAAoB,uEAAb,WAAa;;IAC5B,MAAMC,KAAK,GAAG,KAAKT,MAAL,CAAYU,qBAAZ,CAAkCF,IAAlC,CAAd;;IAEA,MAAMG,SAAS,GAAG,KAAKd,WAAL,CAAiB,KAAKA,WAAL,CAAiBe,MAAjB,GAA0B,CAA3C,CAAlB;;IAEAnC,OAAO,CAACkC,SAAS,CAACE,IAAV,KAAmB,mBAApB,CAAP;;IAEApC,OAAO,CAACkC,SAAS,CAACG,UAAV,CAAqBF,MAArB,KAAgC,CAAjC,CAAP;;IAEAD,SAAS,CAACG,UAAV,GAAuB,CAAC5B,wBAAwB,CAACuB,KAAD,CAAzB,CAAvB;IACA,KAAKX,WAAL,GAAmBjB,SAAS,CAAC4B,KAAD,CAA5B;IACA,OAAO,IAAP;EACD;;EAEDjC,OAAO,CAACgC,IAAD,EAAO;IACZ,MAAMO,EAAE,GAAG,KAAKf,MAAL,CAAYU,qBAAZ,CAAkCF,IAAlC,CAAX;;IAEA,MAAMG,SAAS,GAAG,KAAKd,WAAL,CAAiB,KAAKA,WAAL,CAAiBe,MAAjB,GAA0B,CAA3C,CAAlB;;IAEAnC,OAAO,CAACkC,SAAS,CAACE,IAAV,KAAmB,mBAApB,CAAP;;IAEApC,OAAO,CAACkC,SAAS,CAACG,UAAV,CAAqBF,MAArB,KAAgC,CAAjC,CAAP;;IAEAD,SAAS,CAACG,UAAV,GAAuB,CAAC7B,sBAAsB,CAAC8B,EAAD,CAAvB,CAAvB;IACA,KAAKjB,WAAL,GAAmBjB,SAAS,CAACkC,EAAD,CAA5B;IACA,OAAO,IAAP;EACD;;EAEDC,KAAK,CAACR,IAAD,EAAOS,UAAP,EAAmB;IACtB,IAAIA,UAAU,KAAK,SAAnB,EAA8B,OAAO,KAAKzC,OAAL,CAAagC,IAAb,CAAP;;IAE9B,MAAMO,EAAE,GAAG,KAAKf,MAAL,CAAYU,qBAAZ,CAAkCF,IAAlC,CAAX;;IAEA,MAAMG,SAAS,GAAG,KAAKd,WAAL,CAAiB,KAAKA,WAAL,CAAiBe,MAAjB,GAA0B,CAA3C,CAAlB;;IAEAnC,OAAO,CAACkC,SAAS,CAACE,IAAV,KAAmB,mBAApB,CAAP;;IAEApC,OAAO,CAACkC,SAAS,CAACG,UAAV,CAAqBF,MAArB,KAAgC,CAAjC,CAAP;;IAEAD,SAAS,CAACG,UAAV,GAAuB,CAAC3B,eAAe,CAAC4B,EAAD,EAAKhC,UAAU,CAACkC,UAAD,CAAf,CAAhB,CAAvB;IACA,KAAKnB,WAAL,GAAmBjB,SAAS,CAACkC,EAAD,CAA5B;IACA,OAAO,IAAP;EACD;;EAEDG,GAAG,CAACV,IAAD,EAAO;IACR,MAAMO,EAAE,GAAG,KAAKf,MAAL,CAAYU,qBAAZ,CAAkCF,IAAlC,CAAX;;IAEA,IAAIG,SAAS,GAAG,KAAKd,WAAL,CAAiB,KAAKA,WAAL,CAAiBe,MAAjB,GAA0B,CAA3C,CAAhB;;IAEA,IAAID,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;MAC5CpC,OAAO,CAAC,KAAKqB,WAAN,CAAP;;MAEAa,SAAS,GAAG7B,mBAAmB,CAAC,KAAKgB,WAAN,CAA/B;;MAEA,KAAKD,WAAL,CAAiBS,IAAjB,CAAsBK,SAAtB;IACD;;IAED,KAAKd,WAAL,CAAiB,KAAKA,WAAL,CAAiBe,MAAjB,GAA0B,CAA3C,IAAgDtB,mBAAmB,CAAC,KAAD,EAAQ,CAACC,kBAAkB,CAACwB,EAAD,EAAKJ,SAAS,CAACQ,UAAf,CAAnB,CAAR,CAAnE;IACA,KAAKrB,WAAL,GAAmBjB,SAAS,CAACkC,EAAD,CAA5B;IACA,OAAO,IAAP;EACD;;EAEDK,cAAc,GAAG;IACf,OAAO,KAAKC,QAAL,CAAc,KAAKpB,IAAL,CAAUqB,SAAV,CAAoB,uBAApB,CAAd,CAAP;EACD;;EAEDC,eAAe,GAAG;IAChB,OAAO,KAAKF,QAAL,CAAc,KAAKpB,IAAL,CAAUqB,SAAV,CAAoB,wBAApB,CAAd,CAAP;EACD;;EAEDD,QAAQ,CAACG,MAAD,EAAS;IACf,MAAMb,SAAS,GAAG,KAAKd,WAAL,CAAiB,KAAKA,WAAL,CAAiBe,MAAjB,GAA0B,CAA3C,CAAlB;;IAEA,IAAID,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;MAC5CF,SAAS,CAACQ,UAAV,GAAuBvC,cAAc,CAAC4C,MAAD,EAAS,CAACb,SAAS,CAACQ,UAAX,CAAT,CAArC;IACD,CAFD,MAEO,IAAIR,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;MACnDpC,OAAO,CAACkC,SAAS,CAACc,YAAV,CAAuBb,MAAvB,KAAkC,CAAnC,CAAP;;MAEAD,SAAS,CAACc,YAAV,CAAuB,CAAvB,EAA0BC,IAA1B,GAAiC9C,cAAc,CAAC4C,MAAD,EAAS,CAACb,SAAS,CAACc,YAAV,CAAuB,CAAvB,EAA0BC,IAA3B,CAAT,CAA/C;IACD,CAJM,MAIA;MACLjD,OAAO,CAACkD,IAAR,CAAa,kBAAb;IACD;;IAED,OAAO,IAAP;EACD;;EAEDC,IAAI,CAACpB,IAAD,EAAO;IACT,MAAMG,SAAS,GAAG,KAAKd,WAAL,CAAiB,KAAKA,WAAL,CAAiBe,MAAjB,GAA0B,CAA3C,CAAlB;;IAEA,IAAID,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;MAC5CF,SAAS,CAACQ,UAAV,GAAuB/B,gBAAgB,CAACuB,SAAS,CAACQ,UAAX,EAAuBpC,UAAU,CAACyB,IAAD,CAAjC,CAAvC;IACD,CAFD,MAEO,IAAIG,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;MACnDpC,OAAO,CAACkC,SAAS,CAACc,YAAV,CAAuBb,MAAvB,KAAkC,CAAnC,CAAP;;MAEAD,SAAS,CAACc,YAAV,CAAuB,CAAvB,EAA0BC,IAA1B,GAAiCtC,gBAAgB,CAACuB,SAAS,CAACc,YAAV,CAAuB,CAAvB,EAA0BC,IAA3B,EAAiC3C,UAAU,CAACyB,IAAD,CAA3C,CAAjD;IACD,CAJM,MAIA;MACL/B,OAAO,CAACkD,IAAR,CAAa,qBAAqBhB,SAAS,CAACE,IAA5C;IACD;;IAED,OAAO,IAAP;EACD;;EAEDgB,IAAI,CAACrB,IAAD,EAAO;IACT,KAAKV,WAAL,GAAmBV,gBAAgB,CAAC,KAAKU,WAAN,EAAmBf,UAAU,CAACyB,IAAD,CAA7B,CAAnC;EACD;;AArIiB;;AAyIpBlC,OAAO,CAACE,OAAR,GAAkBgB,aAAlB"},"metadata":{},"sourceType":"script"}