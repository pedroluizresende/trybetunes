{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDirectory = getDirectory;\nexports.getDirectorySync = getDirectorySync;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _pathType = require(\"path-type\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nasync function getDirectory(filepath) {\n  const filePathIsDirectory = await (0, _pathType.isDirectory)(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = _path.default.dirname(filepath);\n\n  return directory;\n}\n\nfunction getDirectorySync(filepath) {\n  const filePathIsDirectory = (0, _pathType.isDirectorySync)(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = _path.default.dirname(filepath);\n\n  return directory;\n}","map":{"version":3,"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;AAEA,eAAeA,YAAf,CAA4BC,QAA5B,EAA+D;EAC7D,MAAMC,mBAAmB,GAAG,MAAM,2BAAYD,QAAZ,CAAlC;;EAEA,IAAIC,mBAAmB,KAAK,IAA5B,EAAkC;IAChC,OAAOD,QAAP;EACD;;EAED,MAAME,SAAS,GAAGC,cAAKC,OAALD,CAAaH,QAAbG,CAAlB;;EAEA,OAAOD,SAAP;AACD;;AAED,SAASG,gBAAT,CAA0BL,QAA1B,EAAoD;EAClD,MAAMC,mBAAmB,GAAG,+BAAgBD,QAAhB,CAA5B;;EAEA,IAAIC,mBAAmB,KAAK,IAA5B,EAAkC;IAChC,OAAOD,QAAP;EACD;;EAED,MAAME,SAAS,GAAGC,cAAKC,OAALD,CAAaH,QAAbG,CAAlB;;EAEA,OAAOD,SAAP;AACD","names":["getDirectory","filepath","filePathIsDirectory","directory","path","dirname","getDirectorySync"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/cosmiconfig/src/getDirectory.ts"],"sourcesContent":["import path from 'path';\nimport { isDirectory, isDirectorySync } from 'path-type';\n\nasync function getDirectory(filepath: string): Promise<string> {\n  const filePathIsDirectory = await isDirectory(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = path.dirname(filepath);\n\n  return directory;\n}\n\nfunction getDirectorySync(filepath: string): string {\n  const filePathIsDirectory = isDirectorySync(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = path.dirname(filepath);\n\n  return directory;\n}\n\nexport { getDirectory, getDirectorySync };\n"]},"metadata":{},"sourceType":"script"}