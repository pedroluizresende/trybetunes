{"ast":null,"code":"'use strict';\n\nconst normalizeRuleSettings = require('./normalizeRuleSettings');\n\nconst rules = require('./rules');\n/** @typedef {import('stylelint').ConfigRules} StylelintConfigRules */\n\n/** @typedef {import('stylelint').Config} StylelintConfig */\n\n/**\n * @param {StylelintConfig} config\n * @return {StylelintConfig}\n */\n\n\nfunction normalizeAllRuleSettings(config) {\n  if (!config.rules) return config;\n  /** @type {StylelintConfigRules} */\n\n  const normalizedRules = {};\n\n  for (const [ruleName, rawRuleSettings] of Object.entries(config.rules)) {\n    const rule = rules[ruleName] || config.pluginFunctions && config.pluginFunctions[ruleName];\n\n    if (rule) {\n      normalizedRules[ruleName] = normalizeRuleSettings(rawRuleSettings, ruleName, rule.primaryOptionArray);\n    } else {\n      normalizedRules[ruleName] = [];\n    }\n  }\n\n  config.rules = normalizedRules;\n  return config;\n}\n\nmodule.exports = normalizeAllRuleSettings;","map":{"version":3,"names":["normalizeRuleSettings","require","rules","normalizeAllRuleSettings","config","normalizedRules","ruleName","rawRuleSettings","Object","entries","rule","pluginFunctions","primaryOptionArray","module","exports"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/stylelint/lib/normalizeAllRuleSettings.js"],"sourcesContent":["'use strict';\n\nconst normalizeRuleSettings = require('./normalizeRuleSettings');\nconst rules = require('./rules');\n\n/** @typedef {import('stylelint').ConfigRules} StylelintConfigRules */\n/** @typedef {import('stylelint').Config} StylelintConfig */\n\n/**\n * @param {StylelintConfig} config\n * @return {StylelintConfig}\n */\nfunction normalizeAllRuleSettings(config) {\n\tif (!config.rules) return config;\n\n\t/** @type {StylelintConfigRules} */\n\tconst normalizedRules = {};\n\n\tfor (const [ruleName, rawRuleSettings] of Object.entries(config.rules)) {\n\t\tconst rule = rules[ruleName] || (config.pluginFunctions && config.pluginFunctions[ruleName]);\n\n\t\tif (rule) {\n\t\t\tnormalizedRules[ruleName] = normalizeRuleSettings(\n\t\t\t\trawRuleSettings,\n\t\t\t\truleName,\n\t\t\t\trule.primaryOptionArray,\n\t\t\t);\n\t\t} else {\n\t\t\tnormalizedRules[ruleName] = [];\n\t\t}\n\t}\n\n\tconfig.rules = normalizedRules;\n\n\treturn config;\n}\n\nmodule.exports = normalizeAllRuleSettings;\n"],"mappings":"AAAA;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,yBAAD,CAArC;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;AAEA;;AACA;;AAEA;AACA;AACA;AACA;;;AACA,SAASE,wBAAT,CAAkCC,MAAlC,EAA0C;EACzC,IAAI,CAACA,MAAM,CAACF,KAAZ,EAAmB,OAAOE,MAAP;EAEnB;;EACA,MAAMC,eAAe,GAAG,EAAxB;;EAEA,KAAK,MAAM,CAACC,QAAD,EAAWC,eAAX,CAAX,IAA0CC,MAAM,CAACC,OAAP,CAAeL,MAAM,CAACF,KAAtB,CAA1C,EAAwE;IACvE,MAAMQ,IAAI,GAAGR,KAAK,CAACI,QAAD,CAAL,IAAoBF,MAAM,CAACO,eAAP,IAA0BP,MAAM,CAACO,eAAP,CAAuBL,QAAvB,CAA3D;;IAEA,IAAII,IAAJ,EAAU;MACTL,eAAe,CAACC,QAAD,CAAf,GAA4BN,qBAAqB,CAChDO,eADgD,EAEhDD,QAFgD,EAGhDI,IAAI,CAACE,kBAH2C,CAAjD;IAKA,CAND,MAMO;MACNP,eAAe,CAACC,QAAD,CAAf,GAA4B,EAA5B;IACA;EACD;;EAEDF,MAAM,CAACF,KAAP,GAAeG,eAAf;EAEA,OAAOD,MAAP;AACA;;AAEDS,MAAM,CAACC,OAAP,GAAiBX,wBAAjB"},"metadata":{},"sourceType":"script"}