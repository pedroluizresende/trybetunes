{"ast":null,"code":"const peq = new Uint32Array(0x10000);\n\nconst myers_32 = (a, b) => {\n  const n = a.length;\n  const m = b.length;\n  const lst = 1 << n - 1;\n  let pv = -1;\n  let mv = 0;\n  let sc = n;\n  let i = n;\n\n  while (i--) {\n    peq[a.charCodeAt(i)] |= 1 << i;\n  }\n\n  for (i = 0; i < m; i++) {\n    let eq = peq[b.charCodeAt(i)];\n    const xv = eq | mv;\n    eq |= (eq & pv) + pv ^ pv;\n    mv |= ~(eq | pv);\n    pv &= eq;\n\n    if (mv & lst) {\n      sc++;\n    }\n\n    if (pv & lst) {\n      sc--;\n    }\n\n    mv = mv << 1 | 1;\n    pv = pv << 1 | ~(xv | mv);\n    mv &= xv;\n  }\n\n  i = n;\n\n  while (i--) {\n    peq[a.charCodeAt(i)] = 0;\n  }\n\n  return sc;\n};\n\nconst myers_x = (b, a) => {\n  const n = a.length;\n  const m = b.length;\n  const mhc = [];\n  const phc = [];\n  const hsize = Math.ceil(n / 32);\n  const vsize = Math.ceil(m / 32);\n\n  for (let i = 0; i < hsize; i++) {\n    phc[i] = -1;\n    mhc[i] = 0;\n  }\n\n  let j = 0;\n\n  for (; j < vsize - 1; j++) {\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const vlen = Math.min(32, m) + start;\n\n    for (let k = start; k < vlen; k++) {\n      peq[b.charCodeAt(k)] |= 1 << k;\n    }\n\n    for (let i = 0; i < n; i++) {\n      const eq = peq[a.charCodeAt(i)];\n      const pb = phc[i / 32 | 0] >>> i & 1;\n      const mb = mhc[i / 32 | 0] >>> i & 1;\n      const xv = eq | mv;\n      const xh = ((eq | mb) & pv) + pv ^ pv | eq | mb;\n      let ph = mv | ~(xh | pv);\n      let mh = pv & xh;\n\n      if (ph >>> 31 ^ pb) {\n        phc[i / 32 | 0] ^= 1 << i;\n      }\n\n      if (mh >>> 31 ^ mb) {\n        mhc[i / 32 | 0] ^= 1 << i;\n      }\n\n      ph = ph << 1 | pb;\n      mh = mh << 1 | mb;\n      pv = mh | ~(xv | ph);\n      mv = ph & xv;\n    }\n\n    for (let k = start; k < vlen; k++) {\n      peq[b.charCodeAt(k)] = 0;\n    }\n  }\n\n  let mv = 0;\n  let pv = -1;\n  const start = j * 32;\n  const vlen = Math.min(32, m - start) + start;\n\n  for (let k = start; k < vlen; k++) {\n    peq[b.charCodeAt(k)] |= 1 << k;\n  }\n\n  let score = m;\n\n  for (let i = 0; i < n; i++) {\n    const eq = peq[a.charCodeAt(i)];\n    const pb = phc[i / 32 | 0] >>> i & 1;\n    const mb = mhc[i / 32 | 0] >>> i & 1;\n    const xv = eq | mv;\n    const xh = ((eq | mb) & pv) + pv ^ pv | eq | mb;\n    let ph = mv | ~(xh | pv);\n    let mh = pv & xh;\n    score += ph >>> m - 1 & 1;\n    score -= mh >>> m - 1 & 1;\n\n    if (ph >>> 31 ^ pb) {\n      phc[i / 32 | 0] ^= 1 << i;\n    }\n\n    if (mh >>> 31 ^ mb) {\n      mhc[i / 32 | 0] ^= 1 << i;\n    }\n\n    ph = ph << 1 | pb;\n    mh = mh << 1 | mb;\n    pv = mh | ~(xv | ph);\n    mv = ph & xv;\n  }\n\n  for (let k = start; k < vlen; k++) {\n    peq[b.charCodeAt(k)] = 0;\n  }\n\n  return score;\n};\n\nconst distance = (a, b) => {\n  if (a.length < b.length) {\n    const tmp = b;\n    b = a;\n    a = tmp;\n  }\n\n  if (b.length === 0) {\n    return a.length;\n  }\n\n  if (a.length <= 32) {\n    return myers_32(a, b);\n  }\n\n  return myers_x(a, b);\n};\n\nconst closest = (str, arr) => {\n  let min_distance = Infinity;\n  let min_index = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    const dist = distance(str, arr[i]);\n\n    if (dist < min_distance) {\n      min_distance = dist;\n      min_index = i;\n    }\n  }\n\n  return arr[min_index];\n};\n\nexport { closest, distance };","map":{"version":3,"names":["peq","Uint32Array","myers_32","a","b","n","length","m","lst","pv","mv","sc","i","charCodeAt","eq","xv","myers_x","mhc","phc","hsize","Math","ceil","vsize","j","start","vlen","min","k","pb","mb","xh","ph","mh","score","distance","tmp","closest","str","arr","min_distance","Infinity","min_index","dist"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/fastest-levenshtein/esm/mod.js"],"sourcesContent":["const peq = new Uint32Array(0x10000);\nconst myers_32 = (a, b) => {\n    const n = a.length;\n    const m = b.length;\n    const lst = 1 << (n - 1);\n    let pv = -1;\n    let mv = 0;\n    let sc = n;\n    let i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] |= 1 << i;\n    }\n    for (i = 0; i < m; i++) {\n        let eq = peq[b.charCodeAt(i)];\n        const xv = eq | mv;\n        eq |= ((eq & pv) + pv) ^ pv;\n        mv |= ~(eq | pv);\n        pv &= eq;\n        if (mv & lst) {\n            sc++;\n        }\n        if (pv & lst) {\n            sc--;\n        }\n        mv = (mv << 1) | 1;\n        pv = (pv << 1) | ~(xv | mv);\n        mv &= xv;\n    }\n    i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] = 0;\n    }\n    return sc;\n};\nconst myers_x = (b, a) => {\n    const n = a.length;\n    const m = b.length;\n    const mhc = [];\n    const phc = [];\n    const hsize = Math.ceil(n / 32);\n    const vsize = Math.ceil(m / 32);\n    for (let i = 0; i < hsize; i++) {\n        phc[i] = -1;\n        mhc[i] = 0;\n    }\n    let j = 0;\n    for (; j < vsize - 1; j++) {\n        let mv = 0;\n        let pv = -1;\n        const start = j * 32;\n        const vlen = Math.min(32, m) + start;\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] |= 1 << k;\n        }\n        for (let i = 0; i < n; i++) {\n            const eq = peq[a.charCodeAt(i)];\n            const pb = (phc[(i / 32) | 0] >>> i) & 1;\n            const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n            const xv = eq | mv;\n            const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n            let ph = mv | ~(xh | pv);\n            let mh = pv & xh;\n            if ((ph >>> 31) ^ pb) {\n                phc[(i / 32) | 0] ^= 1 << i;\n            }\n            if ((mh >>> 31) ^ mb) {\n                mhc[(i / 32) | 0] ^= 1 << i;\n            }\n            ph = (ph << 1) | pb;\n            mh = (mh << 1) | mb;\n            pv = mh | ~(xv | ph);\n            mv = ph & xv;\n        }\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] = 0;\n        }\n    }\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const vlen = Math.min(32, m - start) + start;\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] |= 1 << k;\n    }\n    let score = m;\n    for (let i = 0; i < n; i++) {\n        const eq = peq[a.charCodeAt(i)];\n        const pb = (phc[(i / 32) | 0] >>> i) & 1;\n        const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n        const xv = eq | mv;\n        const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n        let ph = mv | ~(xh | pv);\n        let mh = pv & xh;\n        score += (ph >>> (m - 1)) & 1;\n        score -= (mh >>> (m - 1)) & 1;\n        if ((ph >>> 31) ^ pb) {\n            phc[(i / 32) | 0] ^= 1 << i;\n        }\n        if ((mh >>> 31) ^ mb) {\n            mhc[(i / 32) | 0] ^= 1 << i;\n        }\n        ph = (ph << 1) | pb;\n        mh = (mh << 1) | mb;\n        pv = mh | ~(xv | ph);\n        mv = ph & xv;\n    }\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] = 0;\n    }\n    return score;\n};\nconst distance = (a, b) => {\n    if (a.length < b.length) {\n        const tmp = b;\n        b = a;\n        a = tmp;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n    if (a.length <= 32) {\n        return myers_32(a, b);\n    }\n    return myers_x(a, b);\n};\nconst closest = (str, arr) => {\n    let min_distance = Infinity;\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        const dist = distance(str, arr[i]);\n        if (dist < min_distance) {\n            min_distance = dist;\n            min_index = i;\n        }\n    }\n    return arr[min_index];\n};\nexport { closest, distance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}