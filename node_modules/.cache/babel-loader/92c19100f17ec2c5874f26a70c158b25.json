{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.joinPathSegments = exports.replacePathSegmentSeparator = exports.isAppliedFilter = exports.isFatalError = void 0;\n\nfunction isFatalError(settings, error) {\n  if (settings.errorFilter === null) {\n    return true;\n  }\n\n  return !settings.errorFilter(error);\n}\n\nexports.isFatalError = isFatalError;\n\nfunction isAppliedFilter(filter, value) {\n  return filter === null || filter(value);\n}\n\nexports.isAppliedFilter = isAppliedFilter;\n\nfunction replacePathSegmentSeparator(filepath, separator) {\n  return filepath.split(/[/\\\\]/).join(separator);\n}\n\nexports.replacePathSegmentSeparator = replacePathSegmentSeparator;\n\nfunction joinPathSegments(a, b, separator) {\n  if (a === '') {\n    return b;\n  }\n  /**\n   * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n   */\n\n\n  if (a.endsWith(separator)) {\n    return a + b;\n  }\n\n  return a + separator + b;\n}\n\nexports.joinPathSegments = joinPathSegments;","map":{"version":3,"names":["Object","defineProperty","exports","value","joinPathSegments","replacePathSegmentSeparator","isAppliedFilter","isFatalError","settings","error","errorFilter","filter","filepath","separator","split","join","a","b","endsWith"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@nodelib/fs.walk/out/readers/common.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPathSegments = exports.replacePathSegmentSeparator = exports.isAppliedFilter = exports.isFatalError = void 0;\nfunction isFatalError(settings, error) {\n    if (settings.errorFilter === null) {\n        return true;\n    }\n    return !settings.errorFilter(error);\n}\nexports.isFatalError = isFatalError;\nfunction isAppliedFilter(filter, value) {\n    return filter === null || filter(value);\n}\nexports.isAppliedFilter = isAppliedFilter;\nfunction replacePathSegmentSeparator(filepath, separator) {\n    return filepath.split(/[/\\\\]/).join(separator);\n}\nexports.replacePathSegmentSeparator = replacePathSegmentSeparator;\nfunction joinPathSegments(a, b, separator) {\n    if (a === '') {\n        return b;\n    }\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\nexports.joinPathSegments = joinPathSegments;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,2BAAR,GAAsCH,OAAO,CAACI,eAAR,GAA0BJ,OAAO,CAACK,YAAR,GAAuB,KAAK,CAAvH;;AACA,SAASA,YAAT,CAAsBC,QAAtB,EAAgCC,KAAhC,EAAuC;EACnC,IAAID,QAAQ,CAACE,WAAT,KAAyB,IAA7B,EAAmC;IAC/B,OAAO,IAAP;EACH;;EACD,OAAO,CAACF,QAAQ,CAACE,WAAT,CAAqBD,KAArB,CAAR;AACH;;AACDP,OAAO,CAACK,YAAR,GAAuBA,YAAvB;;AACA,SAASD,eAAT,CAAyBK,MAAzB,EAAiCR,KAAjC,EAAwC;EACpC,OAAOQ,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACR,KAAD,CAAhC;AACH;;AACDD,OAAO,CAACI,eAAR,GAA0BA,eAA1B;;AACA,SAASD,2BAAT,CAAqCO,QAArC,EAA+CC,SAA/C,EAA0D;EACtD,OAAOD,QAAQ,CAACE,KAAT,CAAe,OAAf,EAAwBC,IAAxB,CAA6BF,SAA7B,CAAP;AACH;;AACDX,OAAO,CAACG,2BAAR,GAAsCA,2BAAtC;;AACA,SAASD,gBAAT,CAA0BY,CAA1B,EAA6BC,CAA7B,EAAgCJ,SAAhC,EAA2C;EACvC,IAAIG,CAAC,KAAK,EAAV,EAAc;IACV,OAAOC,CAAP;EACH;EACD;AACJ;AACA;;;EACI,IAAID,CAAC,CAACE,QAAF,CAAWL,SAAX,CAAJ,EAA2B;IACvB,OAAOG,CAAC,GAAGC,CAAX;EACH;;EACD,OAAOD,CAAC,GAAGH,SAAJ,GAAgBI,CAAvB;AACH;;AACDf,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}