{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction deepClone(value, cache) {\n  if (value !== null) {\n    if (cache.has(value)) return cache.get(value);\n    let cloned;\n\n    if (Array.isArray(value)) {\n      cloned = new Array(value.length);\n\n      for (let i = 0; i < value.length; i++) {\n        cloned[i] = typeof value[i] !== \"object\" ? value[i] : deepClone(value[i], cache);\n      }\n    } else {\n      cloned = {};\n      const keys = Object.keys(value);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        cloned[key] = typeof value[key] !== \"object\" ? value[key] : deepClone(value[key], cache);\n      }\n    }\n\n    cache.set(value, cloned);\n    return cloned;\n  }\n\n  return value;\n}\n\nfunction _default(value) {\n  if (typeof value !== \"object\") return value;\n  return deepClone(value, new Map());\n}\n\n0 && 0;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","deepClone","cache","has","get","cloned","Array","isArray","length","i","keys","key","set","Map"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/core/lib/transformation/util/clone-deep.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction deepClone(value, cache) {\n  if (value !== null) {\n    if (cache.has(value)) return cache.get(value);\n    let cloned;\n\n    if (Array.isArray(value)) {\n      cloned = new Array(value.length);\n\n      for (let i = 0; i < value.length; i++) {\n        cloned[i] = typeof value[i] !== \"object\" ? value[i] : deepClone(value[i], cache);\n      }\n    } else {\n      cloned = {};\n      const keys = Object.keys(value);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        cloned[key] = typeof value[key] !== \"object\" ? value[key] : deepClone(value[key], cache);\n      }\n    }\n\n    cache.set(value, cloned);\n    return cloned;\n  }\n\n  return value;\n}\n\nfunction _default(value) {\n  if (typeof value !== \"object\") return value;\n  return deepClone(value, new Map());\n}\n\n0 && 0;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,SAASC,SAAT,CAAmBH,KAAnB,EAA0BI,KAA1B,EAAiC;EAC/B,IAAIJ,KAAK,KAAK,IAAd,EAAoB;IAClB,IAAII,KAAK,CAACC,GAAN,CAAUL,KAAV,CAAJ,EAAsB,OAAOI,KAAK,CAACE,GAAN,CAAUN,KAAV,CAAP;IACtB,IAAIO,MAAJ;;IAEA,IAAIC,KAAK,CAACC,OAAN,CAAcT,KAAd,CAAJ,EAA0B;MACxBO,MAAM,GAAG,IAAIC,KAAJ,CAAUR,KAAK,CAACU,MAAhB,CAAT;;MAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACU,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;QACrCJ,MAAM,CAACI,CAAD,CAAN,GAAY,OAAOX,KAAK,CAACW,CAAD,CAAZ,KAAoB,QAApB,GAA+BX,KAAK,CAACW,CAAD,CAApC,GAA0CR,SAAS,CAACH,KAAK,CAACW,CAAD,CAAN,EAAWP,KAAX,CAA/D;MACD;IACF,CAND,MAMO;MACLG,MAAM,GAAG,EAAT;MACA,MAAMK,IAAI,GAAGf,MAAM,CAACe,IAAP,CAAYZ,KAAZ,CAAb;;MAEA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACF,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;QACpC,MAAME,GAAG,GAAGD,IAAI,CAACD,CAAD,CAAhB;QACAJ,MAAM,CAACM,GAAD,CAAN,GAAc,OAAOb,KAAK,CAACa,GAAD,CAAZ,KAAsB,QAAtB,GAAiCb,KAAK,CAACa,GAAD,CAAtC,GAA8CV,SAAS,CAACH,KAAK,CAACa,GAAD,CAAN,EAAaT,KAAb,CAArE;MACD;IACF;;IAEDA,KAAK,CAACU,GAAN,CAAUd,KAAV,EAAiBO,MAAjB;IACA,OAAOA,MAAP;EACD;;EAED,OAAOP,KAAP;AACD;;AAED,SAASE,QAAT,CAAkBF,KAAlB,EAAyB;EACvB,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAP;EAC/B,OAAOG,SAAS,CAACH,KAAD,EAAQ,IAAIe,GAAJ,EAAR,CAAhB;AACD;;AAED,KAAK,CAAL"},"metadata":{},"sourceType":"script"}