{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\n\nconst renameVisitor = {\n  ReferencedIdentifier(_ref, state) {\n    let {\n      node\n    } = _ref;\n\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n\n      if (path.isMethod()) {\n        (0, _helperEnvironmentVisitor.requeueComputedKeyAndDecorators)(path);\n      }\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration()) {\n      const {\n        declaration\n      } = maybeExportDeclar.node;\n\n      if (t.isDeclaration(declaration) && !declaration.id) {\n        return;\n      }\n    }\n\n    if (maybeExportDeclar.isExportAllDeclaration()) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return path;\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return path;\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(path);\n      this.maybeConvertFromClassFunctionExpression(path);\n    }\n  }\n\n}\n\nexports.default = Renamer;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_binding","require","_helperSplitExportDeclaration","t","_helperEnvironmentVisitor","renameVisitor","ReferencedIdentifier","state","node","name","oldName","newName","Scope","path","scope","bindingIdentifierEquals","binding","identifier","skip","isMethod","requeueComputedKeyAndDecorators","isVariableDeclaration","ids","getOuterBindingIdentifiers","Renamer","constructor","maybeConvertFromExportDeclaration","parentDeclar","maybeExportDeclar","parentPath","isExportDeclaration","isExportDefaultDeclaration","declaration","isDeclaration","id","isExportAllDeclaration","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","rename","block","find","isFunctionExpression","isClassExpression","bindingIds","blockToTraverse","type","cases","forEach","c","traverse","removeOwnBinding","bindings"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@babel/traverse/lib/scope/lib/renamer.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n\n      if (path.isMethod()) {\n        (0, _helperEnvironmentVisitor.requeueComputedKeyAndDecorators)(path);\n      }\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration()) {\n      const {\n        declaration\n      } = maybeExportDeclar.node;\n\n      if (t.isDeclaration(declaration) && !declaration.id) {\n        return;\n      }\n    }\n\n    if (maybeExportDeclar.isExportAllDeclaration()) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return path;\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return path;\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(path);\n      this.maybeConvertFromClassFunctionExpression(path);\n    }\n  }\n\n}\n\nexports.default = Renamer;"],"mappings":"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"},"metadata":{},"sourceType":"script"}