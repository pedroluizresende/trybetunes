{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\n\nconst fsStat = require(\"@nodelib/fs.stat\");\n\nconst constants_1 = require(\"../constants\");\n\nconst utils = require(\"../utils\");\n\nconst common = require(\"./common\");\n\nfunction read(directory, settings) {\n  if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n    return readdirWithFileTypes(directory, settings);\n  }\n\n  return readdir(directory, settings);\n}\n\nexports.read = read;\n\nfunction readdirWithFileTypes(directory, settings) {\n  const dirents = settings.fs.readdirSync(directory, {\n    withFileTypes: true\n  });\n  return dirents.map(dirent => {\n    const entry = {\n      dirent,\n      name: dirent.name,\n      path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n    };\n\n    if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {\n      try {\n        const stats = settings.fs.statSync(entry.path);\n        entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n      } catch (error) {\n        if (settings.throwErrorOnBrokenSymbolicLink) {\n          throw error;\n        }\n      }\n    }\n\n    return entry;\n  });\n}\n\nexports.readdirWithFileTypes = readdirWithFileTypes;\n\nfunction readdir(directory, settings) {\n  const names = settings.fs.readdirSync(directory);\n  return names.map(name => {\n    const entryPath = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n    const stats = fsStat.statSync(entryPath, settings.fsStatSettings);\n    const entry = {\n      name,\n      path: entryPath,\n      dirent: utils.fs.createDirentFromStats(name, stats)\n    };\n\n    if (settings.stats) {\n      entry.stats = stats;\n    }\n\n    return entry;\n  });\n}\n\nexports.readdir = readdir;","map":{"version":3,"names":["Object","defineProperty","exports","value","readdir","readdirWithFileTypes","read","fsStat","require","constants_1","utils","common","directory","settings","stats","IS_SUPPORT_READDIR_WITH_FILE_TYPES","dirents","fs","readdirSync","withFileTypes","map","dirent","entry","name","path","joinPathSegments","pathSegmentSeparator","isSymbolicLink","followSymbolicLinks","statSync","createDirentFromStats","error","throwErrorOnBrokenSymbolicLink","names","entryPath","fsStatSettings"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/@nodelib/fs.scandir/out/providers/sync.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst constants_1 = require(\"../constants\");\nconst utils = require(\"../utils\");\nconst common = require(\"./common\");\nfunction read(directory, settings) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        return readdirWithFileTypes(directory, settings);\n    }\n    return readdir(directory, settings);\n}\nexports.read = read;\nfunction readdirWithFileTypes(directory, settings) {\n    const dirents = settings.fs.readdirSync(directory, { withFileTypes: true });\n    return dirents.map((dirent) => {\n        const entry = {\n            dirent,\n            name: dirent.name,\n            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        };\n        if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {\n            try {\n                const stats = settings.fs.statSync(entry.path);\n                entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n            }\n            catch (error) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    throw error;\n                }\n            }\n        }\n        return entry;\n    });\n}\nexports.readdirWithFileTypes = readdirWithFileTypes;\nfunction readdir(directory, settings) {\n    const names = settings.fs.readdirSync(directory);\n    return names.map((name) => {\n        const entryPath = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n        const stats = fsStat.statSync(entryPath, settings.fsStatSettings);\n        const entry = {\n            name,\n            path: entryPath,\n            dirent: utils.fs.createDirentFromStats(name, stats)\n        };\n        if (settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    });\n}\nexports.readdir = readdir;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}