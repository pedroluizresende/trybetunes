{"ast":null,"code":"var _jsxFileName = \"/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport styles from './Album.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      musics: [],\n      albumInfo: {},\n      requestIsDone: true,\n      favoriteSongs: []\n    };\n\n    this.getFavoriteSongs = async () => {\n      this.setState({\n        requestIsDone: false\n      });\n      const favoriteSongs = await getFavoriteSongs();\n      this.setState({\n        favoriteSongs,\n        requestIsDone: true\n      });\n    };\n\n    this.fetchMusics = async () => {\n      this.setState({\n        requestIsDone: false\n      });\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const allInfos = await getMusics(id);\n      const albumMusics = allInfos.filter(info => info.trackName);\n      this.setState({\n        albumInfo: allInfos[0],\n        musics: albumMusics\n      });\n    };\n\n    this.clickChange = async _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        musics\n      } = this.state;\n      const song = musics.find(music => music.trackId === +target.name);\n      this.setState({\n        requestIsDone: false\n      });\n\n      if (target.checked) {\n        await addSong(song);\n        const favoriteSongs = await getFavoriteSongs();\n        this.setState({\n          requestIsDone: true,\n          favoriteSongs\n        });\n      } else {\n        await removeSong(song);\n        const favoriteSongs = await getFavoriteSongs();\n        this.setState({\n          requestIsDone: true,\n          favoriteSongs\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMusics();\n    this.getFavoriteSongs();\n  }\n\n  render() {\n    const {\n      albumInfo,\n      musics,\n      requestIsDone,\n      favoriteSongs\n    } = this.state;\n\n    const albumInfos = /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"album-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"album-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: albumInfo.artworkUrl100,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          \"data-testid\": \"album-name\",\n          children: albumInfo.collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"artist-name\",\n          children: albumInfo.artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: musics.map(music => /*#__PURE__*/_jsxDEV(MusicCard, {\n          music: music,\n          clickChange: this.clickChange,\n          favoriteSongs: favoriteSongs,\n          favorite: favoriteSongs.some(song => song.trackId === music.trackId)\n        }, music.trackId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"container\", {\n      \"data-testid\": \"page-album\",\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: styles.album,\n        children: /*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"names":["React","Component","PropTypes","Header","getMusics","Loading","MusicCard","addSong","getFavoriteSongs","removeSong","styles","Album","state","musics","albumInfo","requestIsDone","favoriteSongs","setState","fetchMusics","match","params","id","props","allInfos","albumMusics","filter","info","trackName","clickChange","target","song","find","music","trackId","name","checked","componentDidMount","render","albumInfos","artworkUrl100","collectionName","artistName","map","some","container","album","propTypes","shape","string","isRequired"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/src/pages/Album.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport styles from './Album.module.css';\n\nclass Album extends Component {\n  state = {\n    musics: [],\n    albumInfo: {},\n    requestIsDone: true,\n    favoriteSongs: [],\n  };\n\n  componentDidMount() {\n    this.fetchMusics();\n    this.getFavoriteSongs();\n  }\n\n  getFavoriteSongs = async () => {\n    this.setState({\n      requestIsDone: false,\n    });\n    const favoriteSongs = await getFavoriteSongs();\n    this.setState({\n      favoriteSongs,\n      requestIsDone: true,\n    });\n  };\n\n  fetchMusics = async () => {\n    this.setState({\n      requestIsDone: false,\n    });\n    const {\n      match: {\n        params: { id },\n      } } = this.props;\n\n    const allInfos = await getMusics(id);\n    const albumMusics = allInfos.filter((info) => info.trackName);\n    this.setState({\n      albumInfo: allInfos[0],\n      musics: albumMusics,\n    });\n  };\n\n  clickChange = async ({ target }) => {\n    const { musics } = this.state;\n    const song = musics.find((music) => music.trackId === (+target.name));\n    this.setState({\n      requestIsDone: false,\n    });\n    if (target.checked) {\n      await addSong(song);\n      const favoriteSongs = await getFavoriteSongs();\n      this.setState({\n        requestIsDone: true,\n        favoriteSongs,\n      });\n    } else {\n      await removeSong(song);\n      const favoriteSongs = await getFavoriteSongs();\n      this.setState({\n        requestIsDone: true,\n        favoriteSongs,\n      });\n    }\n  };\n\n  render() {\n    const { albumInfo, musics, requestIsDone, favoriteSongs } = this.state;\n    const albumInfos = (\n      <section className=\"album-content\">\n        <section className=\"album-info\">\n          <img src={ albumInfo.artworkUrl100 } alt=\"\" />\n          <h1 data-testid=\"album-name\">{ albumInfo.collectionName }</h1>\n          <h2 data-testid=\"artist-name\">{ albumInfo.artistName }</h2>\n        </section>\n        <ul>\n          {\n            musics.map((music) => (\n              <MusicCard\n                key={ music.trackId }\n                music={ music }\n                clickChange={ this.clickChange }\n                favoriteSongs={ favoriteSongs }\n                favorite={ favoriteSongs\n                  .some((song) => song.trackId === music.trackId) }\n              />\n            ))\n          }\n        </ul>\n      </section>\n    );\n    return (\n\n      <container data-testid=\"page-album\" className={ styles.container }>\n        <Header />\n        <main className={ styles.album } >\n          <header>\n            \n          </header>\n        </main>\n      </container>\n\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}