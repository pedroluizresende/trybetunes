{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\n\nvar LinesAndColumns =\n/** @class */\nfunction () {\n  function LinesAndColumns(string) {\n    this.string = string;\n    var offsets = [0];\n\n    for (var offset = 0; offset < string.length;) {\n      switch (string[offset]) {\n        case LF:\n          offset += LF.length;\n          offsets.push(offset);\n          break;\n\n        case CR:\n          offset += CR.length;\n\n          if (string[offset] === LF) {\n            offset += LF.length;\n          }\n\n          offsets.push(offset);\n          break;\n\n        default:\n          offset++;\n          break;\n      }\n    }\n\n    this.offsets = offsets;\n  }\n\n  LinesAndColumns.prototype.locationForIndex = function (index) {\n    if (index < 0 || index > this.string.length) {\n      return null;\n    }\n\n    var line = 0;\n    var offsets = this.offsets;\n\n    while (offsets[line + 1] <= index) {\n      line++;\n    }\n\n    var column = index - offsets[line];\n    return {\n      line: line,\n      column: column\n    };\n  };\n\n  LinesAndColumns.prototype.indexForLocation = function (location) {\n    var line = location.line,\n        column = location.column;\n\n    if (line < 0 || line >= this.offsets.length) {\n      return null;\n    }\n\n    if (column < 0 || column > this.lengthOfLine(line)) {\n      return null;\n    }\n\n    return this.offsets[line] + column;\n  };\n\n  LinesAndColumns.prototype.lengthOfLine = function (line) {\n    var offset = this.offsets[line];\n    var nextOffset = line === this.offsets.length - 1 ? this.string.length : this.offsets[line + 1];\n    return nextOffset - offset;\n  };\n\n  return LinesAndColumns;\n}();\n\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;","map":{"version":3,"names":["exports","__esModule","LinesAndColumns","LF","CR","string","offsets","offset","length","push","prototype","locationForIndex","index","line","column","indexForLocation","location","lengthOfLine","nextOffset"],"sources":["/home/pedroresende/projetos/trybe/frontend/sd-026-b-project-trybetunes/node_modules/lines-and-columns/build/index.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;AACA,IAAIC,EAAE,GAAG,IAAT;AACA,IAAIC,EAAE,GAAG,IAAT;;AACA,IAAIF,eAAe;AAAG;AAAe,YAAY;EAC7C,SAASA,eAAT,CAAyBG,MAAzB,EAAiC;IAC7B,KAAKA,MAAL,GAAcA,MAAd;IACA,IAAIC,OAAO,GAAG,CAAC,CAAD,CAAd;;IACA,KAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGF,MAAM,CAACG,MAArC,GAA8C;MAC1C,QAAQH,MAAM,CAACE,MAAD,CAAd;QACI,KAAKJ,EAAL;UACII,MAAM,IAAIJ,EAAE,CAACK,MAAb;UACAF,OAAO,CAACG,IAAR,CAAaF,MAAb;UACA;;QACJ,KAAKH,EAAL;UACIG,MAAM,IAAIH,EAAE,CAACI,MAAb;;UACA,IAAIH,MAAM,CAACE,MAAD,CAAN,KAAmBJ,EAAvB,EAA2B;YACvBI,MAAM,IAAIJ,EAAE,CAACK,MAAb;UACH;;UACDF,OAAO,CAACG,IAAR,CAAaF,MAAb;UACA;;QACJ;UACIA,MAAM;UACN;MAdR;IAgBH;;IACD,KAAKD,OAAL,GAAeA,OAAf;EACH;;EACDJ,eAAe,CAACQ,SAAhB,CAA0BC,gBAA1B,GAA6C,UAAUC,KAAV,EAAiB;IAC1D,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,KAAKP,MAAL,CAAYG,MAArC,EAA6C;MACzC,OAAO,IAAP;IACH;;IACD,IAAIK,IAAI,GAAG,CAAX;IACA,IAAIP,OAAO,GAAG,KAAKA,OAAnB;;IACA,OAAOA,OAAO,CAACO,IAAI,GAAG,CAAR,CAAP,IAAqBD,KAA5B,EAAmC;MAC/BC,IAAI;IACP;;IACD,IAAIC,MAAM,GAAGF,KAAK,GAAGN,OAAO,CAACO,IAAD,CAA5B;IACA,OAAO;MAAEA,IAAI,EAAEA,IAAR;MAAcC,MAAM,EAAEA;IAAtB,CAAP;EACH,CAXD;;EAYAZ,eAAe,CAACQ,SAAhB,CAA0BK,gBAA1B,GAA6C,UAAUC,QAAV,EAAoB;IAC7D,IAAIH,IAAI,GAAGG,QAAQ,CAACH,IAApB;IAAA,IAA0BC,MAAM,GAAGE,QAAQ,CAACF,MAA5C;;IACA,IAAID,IAAI,GAAG,CAAP,IAAYA,IAAI,IAAI,KAAKP,OAAL,CAAaE,MAArC,EAA6C;MACzC,OAAO,IAAP;IACH;;IACD,IAAIM,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAG,KAAKG,YAAL,CAAkBJ,IAAlB,CAA3B,EAAoD;MAChD,OAAO,IAAP;IACH;;IACD,OAAO,KAAKP,OAAL,CAAaO,IAAb,IAAqBC,MAA5B;EACH,CATD;;EAUAZ,eAAe,CAACQ,SAAhB,CAA0BO,YAA1B,GAAyC,UAAUJ,IAAV,EAAgB;IACrD,IAAIN,MAAM,GAAG,KAAKD,OAAL,CAAaO,IAAb,CAAb;IACA,IAAIK,UAAU,GAAGL,IAAI,KAAK,KAAKP,OAAL,CAAaE,MAAb,GAAsB,CAA/B,GACX,KAAKH,MAAL,CAAYG,MADD,GAEX,KAAKF,OAAL,CAAaO,IAAI,GAAG,CAApB,CAFN;IAGA,OAAOK,UAAU,GAAGX,MAApB;EACH,CAND;;EAOA,OAAOL,eAAP;AACH,CAtDoC,EAArC;;AAuDAF,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBE,eAArB"},"metadata":{},"sourceType":"script"}